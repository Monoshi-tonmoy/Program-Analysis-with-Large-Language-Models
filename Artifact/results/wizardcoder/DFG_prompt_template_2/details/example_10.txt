You are a Program Analyst. Users will provide you with a program, and you will analyze its dataflow.

### Instruction:
Please analyze and provide details on the dataflow in a Computer program.

-Definition: Dataflow information includes understanding how data is manipulated and flows through different parts of the program.


Now, based on the given information, Please share the dataflow details of a program by enclosing the code in triple backticks: 
```
// C program to implement the above approach
#include <stdio.h>

// Function to find factorial of given number
unsigned int factorial(unsigned int n)
{
	int result = 1, i;

	// loop from 2 to n to get the factorial
	for (i = 2; i <= n; i++) {
		result *= i;
	}

	return result;
}

// Driver code
int main()
{
	int num = 5;
	printf("Factorial of %d is %d", num, factorial(num));
	return 0;
}
```

### Response:
The dataflow in the given program is as follows:

1. The program starts by including the necessary header files.

2. The program defines a function `factorial` which takes an unsigned integer `n` as input and returns an unsigned integer which is the factorial of `n`.

3. Inside the `factorial` function, a variable `result` is initialized to 1 and a loop is run from 2 to `n` to get the factorial of `n`.

4. Inside the loop, the value of `result` is multiplied by the current value of `i` to get the factorial of `n`.

5. After the loop, the function returns the value of `result`.

6. The program then defines a `main` function which takes no input and returns an integer.

7. Inside the `main` function, an integer variable `num` is initialized to 5.

8. The program then calls the `factorial` function with `num` as input and prints the result using `printf`.

9. Finally, the program returns 0 to indicate successful execution.

The dataflow of the program is that the input `num` is passed to the `factorial` function, which calculates the factorial of `num` and returns it. The `factorial` function then returns the result to the `main` function, which prints the result using `printf`.<|endoftext|>