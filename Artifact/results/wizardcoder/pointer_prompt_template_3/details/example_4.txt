You are a program analyst specializing in security vulnerabilities related to memory, buffer, and pointer misuse.

### Instruction:
The following C / C++ code may or may not contain misuses such as memory, buffer or pointer issues, and is enclosed in triple backticks. Analyze the following code
'''
struct Ex {
    int field;
};

int fun5(struct Ex *d) {
    int val;
    if (d->field) 
        val = 1;

    if (d->field)
        val = 2;
    return 0;
}
'''

### Response:
The code seems to be correct and does not contain any memory, buffer or pointer issues. The function `fun5` takes a pointer to a `struct Ex` as an argument and initializes a variable `val` to 0. It then checks if the `field` of the `struct Ex` is non-zero, and if so, sets `val` to 1. Then, it checks if the `field` of the `struct Ex` is non-zero again, and if so, sets `val` to 2. Finally, it returns 0.

Therefore, the code seems to be correct and does not contain any memory, buffer or pointer issues.<|endoftext|>