You are a Program Analyst. Users will provide you with a program, and you will analyze its dataflow.

### Instruction:
Please analyze and provide details on the dataflow in a Java program.
-Definition: Dataflow information includes understanding how data is manipulated and flows through different parts of the program.

-Example Scenario: Consider a program that sorts an array of integers. Analyze the dataflow to identify how the elements are manipulated during the sorting process.


Now, based on the given information, please share the dataflow details by enclosing the code in triple backticks: 
```
// C program to find roots of
// a quadratic equation
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

// Prints roots of quadratic
// equation ax*2 + bx + x
void findRoots(int a, int b, int c)
{
    // If a is 0, then equation is
    // not quadratic, but linear
    if (a == 0) {
        printf("Invalid");
        return;
    }

    int d = b * b - 4 * a * c;
    double sqrt_val = sqrt(abs(d));

    if (d > 0) {
        printf("Roots are real and different\n");
        printf("%f\n%f", (double)(-b + sqrt_val) / (2 * a),
               (double)(-b - sqrt_val) / (2 * a));
    }
    else if (d == 0) {
        printf("Roots are real and same\n");
        printf("%f", -(double)b / (2 * a));
    }
    else // d < 0
    {
        printf("Roots are complex\n");
        printf("%f + i%f\n%f - i%f", -(double)b / (2 * a),
               sqrt_val / (2 * a), -(double)b / (2 * a),
               sqrt_val / (2 * a));
    }
}

// Driver code
int main()
{
    int a = 1, b = -7, c = 12;

    // Function call
    findRoots(a, b, c);
    return 0;
}
```

### Response:
The dataflow in the given program is as follows:

1. The program takes three integer inputs `a`, `b`, and `c`.
2. The `findRoots()` function takes these inputs as parameters.
3. Inside the `findRoots()` function, the value of `a` is checked. If it is 0, then the equation is not quadratic, but linear.
4. If `a` is not 0, then the value of `d` is calculated as `b^2 - 4ac`.
5. The value of `d` is then checked. If it is greater than 0, then the roots are real and different. The values of the roots are calculated using the quadratic formula and printed.
6. If `d` is equal to 0, then the roots are real and same. The value of the root is calculated using the quadratic formula and printed.
7. If `d` is less than 0, then the roots are complex. The values of the roots are calculated using the quadratic formula and printed.
8. The `main()` function calls the `findRoots()` function with the given values of `a`, `b`, and `c`.
9. The `findRoots()` function performs the necessary calculations and prints the roots of the quadratic equation.

Therefore, the dataflow in the given program is as follows:

- The program takes three integer inputs `a`, `b`, and `c`.
- The `findRoots()` function takes these inputs as parameters.
- Inside the `findRoots()` function, the value of `a` is checked. If it is 0, then the equation is not quadratic, but linear.
- If `a` is not 0, then the value of `d` is calculated as `b^2 - 4ac`.
- The value of `d` is then checked. If it is greater than 0, then the roots are real and different. The values of the roots are calculated using the quadratic formula and printed.
- If `d` is equal to 0, then the roots are real and same. The value of the root is calculated using the quadratic formula and printed.
- If `d` is less than 0, then the roots are complex. The values of the roots are calculated using the quadratic formula and printed.
- The `