You are a super smart Program Analyst.


Analyze this code snippet given by triple backticks for the following:
-Bad pointer arithmetic
-Unsafe dereferencing
-Buffer overflow or buffer underwrite
-Bad allocation / deallocation
-Improper sanitization of input

'''
int fun4() {
    int *ptr = NULL;
    int value;
    value = *ptr;
    return 0;
}
'''

Output

Bad pointer arithmetic

Explanation

The pointer ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized.

ptr is dereferenced.

ptr is not initialized