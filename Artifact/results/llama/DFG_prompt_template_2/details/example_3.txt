<s> [INST] <<SYS>>
You are a Program Analyst. Users will provide you with a program, and you will analyze its dataflow.
<</SYS>>

Please analyze and provide details on the dataflow in a Computer program.

-Definition: Dataflow information includes understanding how data is manipulated and flows through different parts of the program.


Now, based on the given information, Please share the dataflow details of a program by enclosing the code in triple backticks: 
```
// C program to find roots of
// a quadratic equation
#include <math.h>
#include <stdio.h>
#include <stdlib.h>

// Prints roots of quadratic
// equation ax*2 + bx + x
void findRoots(int a, int b, int c)
{
    // If a is 0, then equation is
    // not quadratic, but linear
    if (a == 0) {
        printf("Invalid");
        return;
    }

    int d = b * b - 4 * a * c;
    double sqrt_val = sqrt(abs(d));

    if (d > 0) {
        printf("Roots are real and different\n");
        printf("%f\n%f", (double)(-b + sqrt_val) / (2 * a),
               (double)(-b - sqrt_val) / (2 * a));
    }
    else if (d == 0) {
        printf("Roots are real and same\n");
        printf("%f", -(double)b / (2 * a));
    }
    else // d < 0
    {
        printf("Roots are complex\n");
        printf("%f + i%f\n%f - i%f", -(double)b / (2 * a),
               sqrt_val / (2 * a), -(double)b / (2 * a),
               sqrt_val / (2 * a));
    }
}

// Driver code
int main()
{
    int a = 1, b = -7, c = 12;

    // Function call
    findRoots(a, b, c);
    return 0;
}
``` [/INST]  The program is a C program that finds the roots of a quadratic equation. The dataflow of the program can be analyzed as follows:

1. The program starts by including the necessary header files: `math.h`, `stdio.h`, and `stdlib.h`.
2. The program then defines a function called `findRoots` that takes three integer arguments: `a`, `b`, and `c`.
3. The function first checks if `a` is equal to 0. If it is, the function prints "Invalid" and returns.
4. The function then calculates the discriminant `d` using the formula `b*b - 4*a*c`.
5. The function then calculates the square root of the absolute value of `d` using the `sqrt` function from the `math.h` header file.
6. The function then checks the value of `d` to determine the nature of the roots. If `d` is positive, the function prints "Roots are real and different" and calculates the roots using the formula `-b ± sqrt(d)` divided by `2*a`. If `d` is 0, the function prints "Roots are real and same" and calculates the root using the formula `-b / (2*a)`. If `d` is negative, the function prints "Roots are complex" and calculates the roots using the formula `-b ± i*sqrt(d)` divided by `2*a`, where `i` is the imaginary unit.
7. The program then defines a `main` function that calls the `findRoots` function with the arguments `a = 1`, `b = -7`, and `c = 12`.
8. The `main` function then returns 0 to indicate that the program has completed successfully.

Overall, the dataflow of the program is as follows:

* The program starts by including the necessary header files.
* The program then defines a function called `findRoots` that takes three integer arguments and calculates the roots of a quadratic equation.
* The `main` function then calls the `findRoots` function with the arguments `a = 1`, `b = -7`, and `c = 12`.
* The `findRoots` function calculates the roots of the quadratic